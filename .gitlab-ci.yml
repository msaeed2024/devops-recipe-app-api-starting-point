image:
  name: docker:24.0

services:
  - docker:24.0-dind

variables:
  DOCKER_DRIVER: overlay2
  AWS_REGION: "us-east-1"
  ECR_REGISTRY: "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com"
  IMAGE_TAG: "$CI_COMMIT_SHA"

stages:
  - Test and Lint
  - Build and Push
  - Deploy

before_script:
  - apk add --no-cache curl python3 py3-pip
  - pip3 install awscli
  - aws --version

# ─────────────────────────────
# 🔍 Python & Terraform checks
# ─────────────────────────────
Python Checks:
  stage: Test and Lint
  script:
    - docker compose run --rm app sh -c "python manage.py wait_for_db && python manage.py test"
    - docker compose run --rm app sh -c "flake8"
  rules:
    - if: "$CI_COMMIT_BRANCH =~ /^(main|prod)$/"

Terraform Checks:
  stage: Test and Lint
  script:
    - cd infra/
    - docker compose run --rm terraform -chdir=setup/ init -backend=false
    - docker compose run --rm terraform -chdir=setup/ validate
    - docker compose run --rm terraform -chdir=setup/ fmt -check
    - docker compose run --rm terraform -chdir=deploy/ init -backend=false
    - docker compose run --rm terraform -chdir=deploy/ validate
    - docker compose run --rm terraform -chdir=deploy/ fmt -check
  rules:
    - if: "$CI_COMMIT_BRANCH =~ /^(main|prod)$/"

# ─────────────────────────────
# 🛠️ Build & Push Docker Images
# ─────────────────────────────
Build and Push to ECR:
  stage: Build and Push
  rules:
    - if: "$CI_COMMIT_BRANCH =~ /^(main|prod)$/"
  script:
    - echo "🔐 Logging into AWS ECR"
    - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY

    - echo "🐳 Building App Image"
    - docker build --compress -t $ECR_REGISTRY/$ECR_REPO_APP:$IMAGE_TAG .

    - echo "🐳 Building Proxy Image"
    - docker build --compress -t $ECR_REGISTRY/$ECR_REPO_PROXY:$IMAGE_TAG proxy/

    - echo "🚀 Pushing to ECR"
    - docker push $ECR_REGISTRY/$ECR_REPO_APP:$IMAGE_TAG
    - docker push $ECR_REGISTRY/$ECR_REPO_PROXY:$IMAGE_TAG

# ─────────────────────────────
# 🚀 Terraform Deploy
# ─────────────────────────────
Terraform Deploy:
  stage: Deploy
  rules:
    - if: "$CI_COMMIT_BRANCH =~ /^(main|prod)$/"
  script:
    - echo "💬 Using workspace: $CI_COMMIT_BRANCH"
    - export TF_VAR_ecr_app_image="$ECR_REGISTRY/$ECR_REPO_APP:$IMAGE_TAG"
    - export TF_VAR_ecr_proxy_image="$ECR_REGISTRY/$ECR_REPO_PROXY:$IMAGE_TAG"

    - cd infra/
    - docker compose run --rm terraform -chdir=deploy/ init
    - docker compose run --rm terraform -chdir=deploy/ workspace select -or-create $CI_COMMIT_BRANCH
    - docker compose run --rm terraform -chdir=deploy/ apply -auto-approve

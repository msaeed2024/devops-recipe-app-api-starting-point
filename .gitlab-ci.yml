image:
  name: docker:19.03.5

services:
  - docker:19.03.5-dind

before_script:
  - echo "$DOCKERHUB_TOKEN" | docker login --username $DOCKERHUB_USER --password-stdin

stages:
  - Test and Lint
  - Build and Push

Python Checks:
  stage: Test and Lint
  script:
    - docker compose run --rm app sh -c "python manage.py wait_for_db && python manage.py test"
    - docker compose run --rm app sh -c "flake8"
  rules:
    - if: "$CI_COMMIT_BRANCH =~ /^(main|prod)$/"

Terraform Checks:
  stage: Test and Lint
  script:
    - cd infra/
    - docker compose run --rm terraform -chdir=deploy/ init -backend=false
    - docker compose run --rm terraform -chdir=setup/ init -backend=false
    - docker compose run --rm terraform -chdir=setup/ validate
    - docker compose run --rm terraform -chdir=setup/ fmt -check
    - docker compose run --rm terraform -chdir=deploy/ validate
    - docker compose run --rm terraform -chdir=deploy/ fmt -check
  rules:
    - if: "$CI_COMMIT_BRANCH =~ /^(main|prod)$/"

Build and Push:
  image: docker:19.03.5
  services:
    - docker:19.03.5-dind
  stage: Build and Push
  script:
    - echo "Build and Push Docker image"
    - apk add python3
    - pip3 install awscli
    - docker build --compress -t $ECR_REPO:$CI_COMMIT_SHORT_SHA .
    - $(aws ecr get-login --no-include-email --region us-east-1)
    - docker push $ECR_REPO:$CI_COMMIT_SHORT_SHA
    - docker tag $ECR_REPO:$CI_COMMIT_SHORT_SHA $ECR_REPO:latest
    - docker push $ECR_REPO:latest
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(master|production)$/'

  